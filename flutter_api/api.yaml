openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://snippy.me
  description: Generated server url
paths:
  /urls:
    post:
      tags:
      - url-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /urls/{id}:
    get:
      tags:
      - url-controller
      operationId: getUrlForId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /u/{id}:
    get:
      tags:
      - url-controller
      operationId: redirectToURL
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /logs/{id}:
    get:
      tags:
      - app-application
      operationId: logs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /hello:
    get:
      tags:
      - app-application
      operationId: hello
      parameters:
      - name: name
        in: query
        required: false
        schema:
          type: string
          default: World
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /healthcheck:
    get:
      tags:
      - app-application
      summary: Checks health status of the microservices
      operationId: healthCheck
      responses:
        "200":
          description: The status of the services are described in the content body.
  /collections:
    get:
      tags:
      - app-application
      operationId: collections
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /:
    get:
      tags:
      - app-application
      operationId: rootPath
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components: {}
